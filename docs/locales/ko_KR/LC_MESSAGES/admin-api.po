# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2018, Lablup Inc.
# This file is distributed under the same license as the Backend.AI API
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI API Documentation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-10-14 21:43+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../admin-api/intro.rst:2
msgid "Introduction"
msgstr ""

#: ../../admin-api/intro.rst:4
msgid "Backend.AI's Admin API is for developing in-house management consoles."
msgstr ""

#: ../../admin-api/intro.rst:6
msgid "There are two modes of operation:"
msgstr ""

#: ../../admin-api/intro.rst:8
msgid ""
"Full admin access: you can query all information of all users. It "
"requires a privileged keypair."
msgstr ""

#: ../../admin-api/intro.rst:10
msgid ""
"Restricted owner access: you can query only your own information. The "
"server processes your request in this mode if you use your own plain "
"keypair."
msgstr ""

#: ../../admin-api/intro.rst:15
msgid "The Admin API *only* accepts authenticated requests."
msgstr ""

#: ../../admin-api/intro.rst:19
msgid ""
"To test and debug with the Admin API easily, try the proxy mode of `the "
"official Python client <https://pypi.python.org/pypi/backend.ai-"
"client>`_. It provides an insecure (non-SSL, non-authenticated) local "
"HTTP proxy where all the required authorization headers are attached from"
" the client configuration. Using this you do not have to add any custom "
"header configurations to your favorite API development tools."
msgstr ""

#: ../../admin-api/intro.rst:24
msgid "Basics of GraphQL"
msgstr ""

#: ../../admin-api/intro.rst:26
msgid ""
"The Admin API uses a single GraphQL endpoint for both queries and "
"mutations."
msgstr ""

#: ../../admin-api/intro.rst:32
msgid ""
"For more information about GraphQL concepts and syntax, please visit the "
"following site(s):"
msgstr ""

#: ../../admin-api/intro.rst:34
msgid "`GraphQL official website <http://graphql.org/>`_"
msgstr ""

#: ../../admin-api/intro.rst:38
msgid "HTTP Request Convention"
msgstr ""

#: ../../admin-api/intro.rst:40
msgid ""
"A client must use the ``POST`` HTTP method. The server accepts a JSON-"
"encoded body with an object containing two fields: ``query`` and "
"``variables``, pretty much like other GraphQL server implementations."
msgstr ""

#: ../../admin-api/intro.rst:46
msgid ""
"Currently the API gateway does not support schema discovery which is "
"often used by API development tools such as Insomnia and GraphiQL."
msgstr ""

#: ../../admin-api/intro.rst:51
msgid "Field Naming Convention"
msgstr ""

#: ../../admin-api/intro.rst:53
msgid ""
"We do *NOT* automatically camel-case our field names. All field names "
"follow the underscore style, which is common in the Python world as our "
"server-side framework uses Python."
msgstr ""

#: ../../admin-api/intro.rst:59
msgid "Pagination Convention"
msgstr ""

#: ../../admin-api/intro.rst:61
msgid ""
"GraphQL itself does not enforce how to pass pagination information when "
"querying multiple objects of the same type."
msgstr ""

#: ../../admin-api/intro.rst:64
msgid "We use a de-facto standard pagination convention as described below:"
msgstr ""

#: ../../admin-api/intro.rst:66 ../../admin-api/stats.rst:10
#: ../../admin-api/stats.rst:19
msgid "TODO"
msgstr ""

#: ../../admin-api/intro.rst:69
msgid "Custom Scalar Types"
msgstr ""

#: ../../admin-api/intro.rst:71
msgid ""
"``UUID``: A hexademically formatted (8-4-4-4-12 alphanumeric characters "
"connected via single hyphens) UUID values represented as ``String``"
msgstr ""

#: ../../admin-api/intro.rst:72
msgid ""
"``DateTime``: An ISO-8601 formatted date-time value represented as "
"``String``"
msgstr ""

#: ../../admin-api/intro.rst:76
msgid "Authentication"
msgstr ""

#: ../../admin-api/intro.rst:78
msgid "The admin API shares the same authentication method of the user API."
msgstr ""

#: ../../admin-api/intro.rst:82
msgid "Versioning"
msgstr ""

#: ../../admin-api/intro.rst:84
msgid ""
"As we use GraphQL, there is no explicit versioning. You can use any "
"version prefix in the endpoint URL, from ``v1`` to ``vN`` where ``N`` is "
"the latest major API version."
msgstr ""

#: ../../admin-api/keypairs.rst:2
msgid "KeyPair Management"
msgstr ""

#: ../../admin-api/keypairs.rst:5 ../../admin-api/sessions.rst:5
#: ../../admin-api/stats.rst:5 ../../admin-api/vfolders.rst:5
msgid "Full Admin"
msgstr ""

#: ../../admin-api/keypairs.rst:8 ../../admin-api/keypairs.rst:74
#: ../../admin-api/sessions.rst:8 ../../admin-api/sessions.rst:72
#: ../../admin-api/stats.rst:8 ../../admin-api/stats.rst:17
#: ../../admin-api/vfolders.rst:8 ../../admin-api/vfolders.rst:34
msgid "Query Schema"
msgstr ""

#: ../../admin-api/keypairs.rst:35 ../../admin-api/keypairs.rst:88
msgid "Mutation Schema"
msgstr ""

#: ../../admin-api/keypairs.rst:71 ../../admin-api/sessions.rst:69
#: ../../admin-api/stats.rst:14 ../../admin-api/vfolders.rst:31
msgid "Restricted Owner Access"
msgstr ""

#: ../../admin-api/keypairs.rst:76
msgid ""
"It shares the same ``KeyPair`` type, but you cannot use ``user_id`` "
"argument in the root query because the client can only query the keypair "
"that is being used to make this API query. Also the returned value is "
"always a single object."
msgstr ""

#: ../../admin-api/keypairs.rst:90
msgid "There is no mutations available."
msgstr ""

#: ../../admin-api/sessions.rst:2
msgid "Compute Session Monitoring"
msgstr ""

#: ../../admin-api/sessions.rst:74
msgid ""
"It shares the same ``ComputeSession`` and ``ComputeWorker`` type, but "
"with a slightly different root query type:"
msgstr ""

#: ../../admin-api/stats.rst:2
msgid "Statistics"
msgstr ""

#: ../../admin-api/vfolders.rst:2
msgid "Virtual Folder Management"
msgstr ""

#: ../../admin-api/vfolders.rst:36
msgid ""
"It shares the same ``VirtualFolder`` type, but you cannot use "
"``access_key`` argument in the root query."
msgstr ""

